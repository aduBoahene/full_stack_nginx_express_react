name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --tag your-dockerhub-username/reverse-proxy-be:latest \
          --push \
          ./reverse-proxy-be

    - name: Build and push frontend image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --tag your-dockerhub-username/reverse-proxy-fr:latest \
          --push \
          ./reverse-proxy-fr

    - name: Build and push nginx image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --tag your-dockerhub-username/nginx-with-frontend:latest \
          --push \
          ./reverse-proxy-fr

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
        chmod 600 ec2-key.pem
        scp -i ec2-key.pem -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/your-project
        ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/${{ secrets.EC2_USER }}/your-project
          docker-compose pull
          docker-compose up -d
        EOF
